# Generated by Django 2.0.6 on 2018-08-10 18:53

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='user',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id_admin', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_usuario', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='solo se aceptas letras', regex='^[a-zA-Z]*$|\\d*$')])),
                ('apellidos_usuario', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='solo se aceptas letras', regex='^[a-zA-Z]*$|\\d*$')])),
                ('tefelono_usuario', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='el campo acepta solo numeros', regex='^[0-9]{11}')])),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.RegexValidator(message='solo se permiten correos hotmail.com o gmail.com', regex='^[a-zA-Z]*@hotmail.com|[a-zA-Z]*@gmail.com$')])),
                ('fecha_participacion', models.DateField(auto_now=True)),
                ('p00', models.IntegerField(blank=True, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='solo se aceptas numeros', regex='^[0-9]{6,8}')])),
                ('cedula_usuario', models.IntegerField(unique=True, validators=[django.core.validators.RegexValidator(message='solo se aceptas numeros', regex='^[0-9]{6,8}')])),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_participante', models.BooleanField(default=False)),
                ('is_instructor', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
